library ieee;
use ieee.std_logic_1164.all;

entity interface_esp32_uc is 
    port ( 
        clock       : in  std_logic;
		  reset		  : in std_logic;
		  fim_medida  : in std_logic;
		  start       : in std_logic;
		  pronto_rx   : in std_logic;
		  ultimo 	  : in std_logic;
		  inicia_rx   : out std_logic;
		  pronto      : out std_logic;
		  medir		  : out std_logic;
		  zera        : out std_logic;
		  db_estado   : out std_logic_vector(3 downto 0)
    );
end interface_esp32_uc;

architecture fsm_arch of interface_esp32_uc is
    type tipo_estado is (inicial, preparacao, medida, 
                         aguarda_medida, solicita, aguarda_dado, armazenamento, final);
    signal Eatual, Eprox: tipo_estado;
begin

    -- estado
    process (reset, clock)
    begin
        if reset = '1' then
            Eatual <= inicial;
        elsif clock'event and clock = '1' then
            Eatual <= Eprox; 
        end if;
    end process;

    -- logica de proximo estado
    process (start, fim_medida, pronto_rx, ultimo, Eatual) 
    begin
      case Eatual is
        when inicial =>         if start='1' then Eprox <= preparacao;
                                else              Eprox <= inicial;
                                end if;
        when preparacao =>      Eprox <= medir;
        when medida =>   		  Eprox <= aguarda_medida;
        when aguarda_medida =>  if fim_medida='0' then Eprox <= aguarda_medida;
                                else             Eprox <= solicita;
                                end if;
        when solicita =>        Eprox <= aguarda_dado;
		  when aguarda_dado =>    if pronto_rx = '0' then Eprox <= aguarda_dado;
										  else 						  Eprox <= armazenamento;
										  end if;
        when armazenamento =>   if ultimo = '1' then Eprox <= final;
										  else					  Eprox <= solicita;
										  end if
        when final =>           Eprox <= inicial;
        when others =>          Eprox <= inicial;
      end case;
    end process;

  -- saidas de controle
  with Eatual select 
      zera <= '1' when preparacao, '0' when others;
  with Eatual select
      medir <= '1' when medida, '0' when others;
  with Eatual select
      inicia_rx <= '1' when armazenamento, '0' when others;
  with Eatual select
      pronto <= '1' when final, '0' when others;

  with Eatual select
      db_estado <= "0000" when inicial, 
                   "0001" when preparacao, 
                   "0010" when medida, 
                   "0011" when aguarda_medida,
                   "0100" when solicita, 
                   "0101" when aguarda_dado, 
                   "0110" when armazenamento,
						 "0111" when final,
                   "1111" when others;

end architecture fsm_arch;